1. 消息数据校验（价格）
2. 原始数据拷贝（消息集合）
3. 构建批量指标数据集合
	3.1 根据批量indexcode获取indexcode对应路由表信息Map<String, IdxIndexDTO>
	3.2 遍历messageList拼装业务类型对应业务表ID集合mapBusinessIdListByBusinessType
	3.3 遍历业务类型对应业务表ID集合从七大业务表中拼装获取是否显示和是否启用的状态集合Map（key：业务类型-业务表ID；value：不显示或者不启用的为false，否则为true）
	3.4 根据上一步得到的集合Map，分别获取“禁用的指标集合”和“启用不显示的指标集合”
	3.5 构建真实发布日期
		3.5.1 移除掉messageList中禁用的，以及在路由表不存在的指标
		3.5.2 计算真实发布日期，计算规则如下
			国际原油，国际市场价减一天。跨周末  如果是周一，则改为周五
			其他五种业务类型的直接取消息的时间
		3.5.3 从Redis中获取发布日期不往前推的国际指标的品种集合
		3.5.4 根据获取到的不往前推的品种集合，进行覆盖掉上面的数据
	3.6 查询该次发布的价格指标在ES中当天真实发布日期的数据
	3.7 去重过滤数据，过滤消息message
		去重规则为真实发布时间和价格相同的为重复
		如果是不显示的就查最新一天的数据库的数据比较过滤
		如果是显示的就查es的最新一天的数据比较过滤
		注意：这里感觉多余，为什么不全部查数据库的？担心数据库和es的数据一致性？显示的以es的为准？
	3.8 计算涨跌幅率
		3.8.1 从es查询获取上一天的数据集合，如果es为空，继续判断不显示的从数据库查询上一天数据，进行计算，结果返回
		3.8.2 如果es查询的不为空，继续遍历messageList，计算方法中也进行了不显示查数据库，显示的走es的数据
		注意：这里感觉也是有点多余，为什么不直接走第二步的操作？
	3.9 构建批量指标数据
		英文站的更新操作没必要这么写，因为全是更新操作
		3.9.1 企业出厂价、国内市场价、主营批发价发布为新增
		3.9.2 如果是国际原油、国际市场价、主营零售价、基准价，并且是不显示的指标
		3.9.3 如果是国际原油、国际市场价、主营零售价、基准价，并且是显示的指标，根据ES中是否有当天数据判断是新增还是更新
		注意：感觉可以优化
4. 批量数据插入idx_data表
5. 消息数据向下传递